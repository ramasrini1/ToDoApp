{"ast":null,"code":"import axios from \"axios\";\nconst BASE_URL = process.env.REACT_APP_BASE_URL || \"http://127.0.0.1:5000\";\n\n/** API Class.\n *\n * Static class tying together methods used to get/send to to the API.\n * There shouldn't be any frontend-specific stuff here, and there shouldn't\n * be any API-aware stuff elsewhere in the frontend.\n *\n */\n\nclass TodoApi {\n  // Individual API routes\n\n  /** Signup for site. */\n  static async signup(user, pass) {\n    let url = `${BASE_URL}/api/register`;\n    let formData = {\n      username: user,\n      password: pass\n    };\n    console.log(\"api \" + user);\n    let res = await axios.post(url, {\n      username: user,\n      password: pass\n    });\n    console.log(\"msg2 in s\" + res.data['msg']);\n    return res.data;\n  }\n  static async login(data) {\n    let url = `${BASE_URL}/login`;\n    let res = await axios.post(url, data);\n    return res.data;\n  }\n  static async logout() {\n    let url = `${BASE_URL}/logout`;\n    let res = await axios.get(url);\n    return res.data;\n  }\n  static async getMyTodos(token) {\n    let data = {};\n    let url = `${BASE_URL}/api/mytodos`;\n    let val = \"\";\n    let res = await axios.post(url, data, {\n      headers: {\n        'x-access-token': `${token}`\n      }\n    });\n    //console.log(\"data from mytodos \" + res.data.todos[0].task_name)    \n    return res.data.todos;\n  }\n  static async addTodo(token, task) {\n    let url = `${BASE_URL}/api/add`;\n    let res = await axios.post(url, task, {\n      headers: {\n        'x-access-token': `${token}`\n      }\n    });\n    return res.data;\n  }\n  static async deleteTodo(token, id) {\n    let url = `${BASE_URL}/api/delete/${id}`;\n    let data = {};\n    let res = await axios.post(url, data, {\n      headers: {\n        'x-access-token': `${token}`\n      }\n    });\n    return res.data;\n  }\n  static async updateTodo(token, data, id) {\n    let url = `${BASE_URL}/api/update/${id}`;\n    console.log(\"url \" + url);\n    console.log(\"token is \" + token);\n    let res = await axios.post(url, data, {\n      headers: {\n        'x-access-token': `${token}`\n      }\n    });\n    return res.data;\n  }\n}\nexport default TodoApi;","map":{"version":3,"names":["axios","BASE_URL","process","env","REACT_APP_BASE_URL","TodoApi","signup","user","pass","url","formData","username","password","console","log","res","post","data","login","logout","get","getMyTodos","token","val","headers","todos","addTodo","task","deleteTodo","id","updateTodo"],"sources":["/Users/ramasrinivas/Documents/ToDoApp/client/src/Api/api.js"],"sourcesContent":["import axios from \"axios\";\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL || \"http://127.0.0.1:5000\"\n\n/** API Class.\n *\n * Static class tying together methods used to get/send to to the API.\n * There shouldn't be any frontend-specific stuff here, and there shouldn't\n * be any API-aware stuff elsewhere in the frontend.\n *\n */\n\nclass TodoApi {\n  // Individual API routes\n  \n  /** Signup for site. */\n  static async signup(user, pass) {\n    let url = `${BASE_URL}/api/register`;\n    let formData = {username: user, password: pass};\n    console.log(\"api \" + user)\n    let res = await axios.post(url, {username: user, password: pass});\n    console.log(\"msg2 in s\" + res.data['msg'])\n    return res.data;\n  }\n\n  static async login(data) {\n    let url = `${BASE_URL}/login`;\n    let res = await axios.post(url, data);\n    return res.data;\n  }\n\n  static async logout() {\n    let url = `${BASE_URL}/logout`;\n    let res = await axios.get(url);\n    return res.data;\n  }\n\n  static async getMyTodos(token) {\n    let data = {}\n    let url = `${BASE_URL}/api/mytodos`;\n    let val = \"\";\n    \n    let res = await axios.post(url, data, {\n      headers: {'x-access-token': `${ token }`}\n    })   \n    //console.log(\"data from mytodos \" + res.data.todos[0].task_name)    \n    return res.data.todos  \n  }\n\n  static async addTodo( token, task ) {\n    let url = `${BASE_URL}/api/add`;\n    let res = await axios.post(url, task, {\n      headers: {'x-access-token': `${ token }`}\n    })    \n    return res.data  \n  }\n\n  static async deleteTodo( token, id ) {\n    let url = `${BASE_URL}/api/delete/${id}`;\n    let data = {}\n    let res = await axios.post(url, data, {\n      headers: {'x-access-token': `${ token }`}\n    })    \n    return res.data  \n  }\n\n  static async updateTodo( token, data, id ) {\n    let url = `${BASE_URL}/api/update/${id}`;\n    console.log( \"url \" + url)\n    console.log(\"token is \" + token)\n    \n    let res = await axios.post(url, data, {\n      headers: {'x-access-token': `${ token }`}\n    })    \n    return res.data;  \n  }\n\n}\n\nexport default TodoApi;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}