{"ast":null,"code":"var _jsxFileName = \"/Users/ramasrinivas/Documents/ToDoApp/client/src/Pages/TodoPage.js\",\n  _s = $RefreshSig$();\nimport { useContext, useEffect, useState } from \"react\";\nimport { useAuth } from '../Components/Auth/auth';\nimport Form from '../Components/Form/form';\nimport Card from '../Components/Card/Card';\nimport TodoApi from \"../Api/api\";\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction TodoPage() {\n  _s();\n  const [addToDo, setAddToDo] = useState('');\n  const [todos, setTodos] = useState([]);\n  const [isAddedSuccess, setIsAddedSuccess] = useState(false);\n  const auth = useAuth();\n  async function fetchApiData() {\n    const results = await TodoApi.getMyTodos(auth.token);\n    if (results.status === 400) {\n      alert(results.msg);\n    } else {\n      let items = results;\n      setTodos(items);\n    }\n  }\n  useEffect(() => {\n    fetchApiData();\n  }, []);\n  const handleFormSubmit = () => {\n    // send data to backend through api call\n    const addData = async function () {\n      let task = {\n        task_name: addToDo\n      };\n      const results = await TodoApi.addTodo(auth.token, task);\n      fetchApiData();\n      if (results.status === 400) {\n        alert(results.msg);\n      }\n    };\n    addData();\n    setAddToDo('');\n    setIsAddedSuccess(true);\n    if (isAddedSuccess === true) {\n      setIsAddedSuccess(false);\n    }\n  }; // handleFormSubmit\n\n  // user types gets reflected on form field, changes state of addToDo\n  const handleFormChange = inputValue => {\n    setAddToDo(inputValue);\n  };\n  function updateTodo(t, newState) {\n    //console.log(\"task_name \" + t.task_name + \" id is \" + t.id + \" state \" + newState)\n    const data = {\n      id: t.id,\n      complete: newState\n    };\n    const updateData = async function () {\n      let res = await TodoApi.updateTodo(auth.token, data, t.id);\n      fetchApiData();\n      if (res.status === 400) {\n        alert(res.msg);\n      }\n    };\n    updateData();\n    setIsAddedSuccess(true);\n    if (isAddedSuccess === true) {\n      setIsAddedSuccess(false);\n    }\n  }\n  function deleteTodo(id) {\n    console.log(\"item to be delted \" + id);\n    const deleteData = async function () {\n      let res = await TodoApi.deleteTodo(auth.token, id);\n      fetchApiData();\n    };\n    deleteData();\n    setIsAddedSuccess(true);\n    if (isAddedSuccess === true) {\n      setIsAddedSuccess(false);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mt-4\",\n      children: \"Todo App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      userInput: addToDo,\n      onFormChange: handleFormChange,\n      onFormSubmit: handleFormSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      listOfTodos: todos,\n      updateTodo: updateTodo,\n      deleteTodo: deleteTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(TodoPage, \"LgK8Fk1U/hl9oYjdZM14nu/i7QU=\", false, function () {\n  return [useAuth];\n});\n_c = TodoPage;\nexport default TodoPage;\nvar _c;\n$RefreshReg$(_c, \"TodoPage\");","map":{"version":3,"names":["useContext","useEffect","useState","useAuth","Form","Card","TodoApi","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","TodoPage","_s","addToDo","setAddToDo","todos","setTodos","isAddedSuccess","setIsAddedSuccess","auth","fetchApiData","results","getMyTodos","token","status","alert","msg","items","handleFormSubmit","addData","task","task_name","addTodo","handleFormChange","inputValue","updateTodo","t","newState","data","id","complete","updateData","res","deleteTodo","console","log","deleteData","children","className","fileName","_jsxFileName","lineNumber","columnNumber","userInput","onFormChange","onFormSubmit","listOfTodos","_c","$RefreshReg$"],"sources":["/Users/ramasrinivas/Documents/ToDoApp/client/src/Pages/TodoPage.js"],"sourcesContent":["import {useContext, useEffect, useState} from \"react\";\nimport { useAuth } from '../Components/Auth/auth';\nimport Form from '../Components/Form/form';\nimport Card from '../Components/Card/Card';\nimport TodoApi from \"../Api/api\";\nimport {Link} from 'react-router-dom';\n\nfunction TodoPage() {\n\n  const [addToDo, setAddToDo] = useState('');\n  const [todos,setTodos] = useState([]);\n  const [isAddedSuccess, setIsAddedSuccess] = useState(false);\n\n  const auth = useAuth();\n\n  async function fetchApiData(){\n    const results = await TodoApi.getMyTodos(auth.token);\n    if ( results.status === 400 ) { \n      alert(results.msg)\n    } else {\n      let items = results;\n      setTodos(items);\n    }\n  }\n  useEffect(() => {\n    fetchApiData();\n  }, []);\n\n  const handleFormSubmit = () => {\n    // send data to backend through api call\n    const addData = async function () {\n      let task = {task_name: addToDo}\n      const results = await TodoApi.addTodo(auth.token, task); \n      fetchApiData();\n      if ( results.status === 400){\n        alert(results.msg)\n      }\n      \n    };\n    addData();\n    setAddToDo('');\n    setIsAddedSuccess(true)\n    if ( isAddedSuccess === true){\n      setIsAddedSuccess(false);\n    }\n  } // handleFormSubmit\n\n  // user types gets reflected on form field, changes state of addToDo\n  const handleFormChange = (inputValue) => {\n    setAddToDo(inputValue);\n  }\n\n  function updateTodo(t, newState) {\n    //console.log(\"task_name \" + t.task_name + \" id is \" + t.id + \" state \" + newState)\n    const data = {id:t.id, complete:newState};\n    \n    const updateData = async function () {\n      let res = await TodoApi.updateTodo(auth.token, data, t.id ) \n      fetchApiData();\n      if (res.status === 400 ){ alert( res.msg); } \n    };\n    updateData();\n    setIsAddedSuccess(true)\n    if ( isAddedSuccess === true){\n      setIsAddedSuccess(false);\n    }\n  }\n\n  function deleteTodo(id) {\n    console.log(\"item to be delted \" + id)\n    const deleteData = async function () {\n      let res = await TodoApi.deleteTodo(auth.token, id)  \n      fetchApiData();\n    };\n    deleteData();\n    setIsAddedSuccess(true)\n    if ( isAddedSuccess === true){\n      setIsAddedSuccess(false);\n    }\n  }\n\n  return (\n    <>\n      <h1 className=\"mt-4\">Todo App</h1>\n      <Form userInput={addToDo} \n            onFormChange={handleFormChange}\n            onFormSubmit={handleFormSubmit}>      \n      </Form>\n      <Card listOfTodos={todos} updateTodo={updateTodo} deleteTodo={deleteTodo}/>\n    </>\n  )\n}\n\nexport default TodoPage;\n\n "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}